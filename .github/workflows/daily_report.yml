name: Investory Daily Report (Diag)

on:
  workflow_dispatch: {}   # Manuell starten, bis alles stabil ist
  # schedule:
  #   - cron: "0 4 * * 1-5"   # 06:00 Europe/Zurich ~ 04:00 UTC (Sommerzeit)

jobs:
  run:
    runs-on: ubuntu-latest

    env:
      INV_WP_BASE:           ${{ secrets.INV_WP_BASE }}
      INV_WP_USER:           ${{ secrets.INV_WP_USER }}
      INV_WP_APP_PW:         ${{ secrets.INV_WP_APP_PW }}
      INV_LOGO_URL:          ${{ secrets.INV_LOGO_URL }}
      INV_POPPINS_REG_URL:   ${{ secrets.INV_POPPINS_REG_URL }}
      INV_POPPINS_BOLD_URL:  ${{ secrets.INV_POPPINS_BOLD_URL }}
      INV_OAI_API_KEY:       ${{ secrets.INV_OAI_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show egress IP of runner
        run: |
          echo "Runner public IPs:"
          curl -s https://api.ipify.org ; echo
          curl -s https://ifconfig.me ; echo

      - name: Show repo tree (debug)
        run: |
          echo "Working dir:"; pwd
          echo "List files:"; ls -la
          echo "Python version:"; python3 -V

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests reportlab pillow

      - name: Generate & upload PDF (pipeline)
        id: gen
        run: |
          python - <<'PY'
          import traceback, re, sys
          try:
              import daily_report
              url = daily_report.run_pdf_pipeline()
          except Exception as e:
              print("PIPELINE ERROR:", e)
              traceback.print_exc()
              sys.exit(1)
          PY

      # Lade das lokal erzeugte PDF als Artifact hoch â€“ damit du es ansehen kannst
      - name: Find local PDF path from logs
        id: findpdf
        run: |
          # Grep aus dem vorigen Step-Log
          path=$(grep -oE 'LOCAL_PDF_PATH: .*' "$GITHUB_STEP_SUMMARY" || true)
          # Fallback: Standardpfad
          echo "pdf=/tmp/Daily_Investment_Report_$(date +%Y-%m-%d).pdf" >> $GITHUB_OUTPUT

      - name: Upload PDF artifact
        uses: actions/upload-artifact@v4
        with:
          name: latest-investory-report
          path: /tmp/Daily_Investment_Report_*.pdf
          if-no-files-found: warn
