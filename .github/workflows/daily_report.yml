name: Investory Daily Report â†’ GitHub Pages

# ------------------------------------------------------------
# 1) Workflow-Trigger
#    â€¢ manueller Start
#    â€¢ Moâ€“Fr: 06:00 Europe/Zurich
# ------------------------------------------------------------
on:
  workflow_dispatch: {}
  schedule:
    # Sommerzeit: 04 UTC  â†’ 06 CEST
    - cron: "0 4 * * 1-5"
    # Winterzeit: 05 UTC  â†’ 06 CET
    - cron: "0 5 * * 1-5"

# ------------------------------------------------------------
# 2) Repository-Schreibrechte fÃ¼r gh-pages
# ------------------------------------------------------------
permissions:
  contents: write
  pages:    write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    # --------------------------------------------------------
    # 3) Secrets â†’ als UmgebungsÂ­variablen
    # --------------------------------------------------------
    env:
      INV_LOGO_URL:          ${{ secrets.INV_LOGO_URL }}
      INV_POPPINS_REG_URL:   ${{ secrets.INV_POPPINS_REG_URL }}
      INV_POPPINS_BOLD_URL:  ${{ secrets.INV_POPPINS_BOLD_URL }}
      INV_OAI_API_KEY:       ${{ secrets.INV_OAI_API_KEY }}

    steps:
    # --------------------------------------------------------
    # 4) Quellcode holen
    # --------------------------------------------------------
    - name: Checkout repo
      uses: actions/checkout@v4

		# --------------------------------------------------------
		# 5) Python-Runtime & Dependencies
		# --------------------------------------------------------
		- name: Set up Python 3.11
		  uses: actions/setup-python@v5
		  with:
    		python-version: "3.11"

		- name: Install dependencies
  		run: |
    		python -m pip install --upgrade pip
    		pip install requests reportlab pillow pytz serpapi

    # --------------------------------------------------------
    # 6) PDF erzeugen
    #    â€¢ daily_report.py schreibt Pfad ins Log
    #    â€¢ wir greifen ihn als Step-Output ab
    # --------------------------------------------------------
    - name: Generate PDF
      id: gen
      run: |
        python daily_report.py | tee /tmp/report_log.txt
        PDF=$(grep -oE '/tmp/Daily_Investment_Report_[0-9\-]+\.pdf' /tmp/report_log.txt | head -n1)
        if [ -z "$PDF" ]; then
          echo "::error::PDF-Pfad nicht gefunden"; exit 1
        fi
        echo "pdf=$PDF" >> "$GITHUB_OUTPUT"
        echo "Gefundenes PDF: $PDF"

    # --------------------------------------------------------
    # 7) PDF in pages-Ordner kopieren
    #    â€¢ datierte Kopie in /reports/
    #    â€¢ fixe Kopie als â€¦_latest.pdf
    # --------------------------------------------------------
    - name: Copy PDF to public/
      run: |
        mkdir -p public/reports
        cp "${{ steps.gen.outputs.pdf }}" public/reports/
        cp "${{ steps.gen.outputs.pdf }}" public/Daily_Investment_Report_latest.pdf

    # --------------------------------------------------------
    # 8) Archiv begrenzen â†’ nur 30 jÃ¼ngste Dateien behalten
    # --------------------------------------------------------
    - name: Keep only 30 newest PDFs
      run: |
        cd public/reports
        ls -1t Daily_Investment_Report_*.pdf | tail -n +31 | xargs -r rm -f
        cd ../../

    # --------------------------------------------------------
    # 9)  >>>  NEUER SCHRITT  <<<
    #    index.html im Ordner /reports/ erzeugen
    # --------------------------------------------------------
    - name: Build reports index.html
      run: |
        cd public/reports

        {
          echo '<!DOCTYPE html>'
          echo '<html lang="de"><head><meta charset="utf-8">'
          echo '<title>Investment Reports â€“ letzte 30 Tage</title>'
          echo '<style>body{font-family:Arial,Helvetica,sans-serif;margin:2rem;}'
          echo 'h1{font-size:1.5rem;} ul{line-height:1.6;}'
          echo 'a{color:#0b5bd3;text-decoration:none;} a:hover{text-decoration:underline;}'
          echo '</style></head><body>'
          echo '<h1>Investment Reports (letzte 30 Tage)</h1><ul>'
          for f in $(ls -1t Daily_Investment_Report_*.pdf); do
            d=$(echo "$f" | grep -oE '[0-9]{4}-[0-9]{2}-[0-9]{2}')
            echo "  <li><a href=\"$f\">$d</a></li>"
          done
          echo '</ul></body></html>'
        } > index.html

    # --------------------------------------------------------
    # 10) Deploy â†’ gh-pages
    # --------------------------------------------------------
    - name: Deploy ðŸš€
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token:   ${{ secrets.GITHUB_TOKEN }}
        publish_dir:    ./public
        publish_branch: gh-pages
        keep_files:     true
