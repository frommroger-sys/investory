name: Investory Daily Report â†’ GitHub Pages

on:
  workflow_dispatch: {}
  schedule:
    # 06:00 Europe/Zurich  (Sommer = 04 UTC, Winter = 05 UTC)
    - cron: "0 4 * * 1-5"
    - cron: "0 5 * * 1-5"

permissions:
  contents: write
  pages:    write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      INV_LOGO_URL:          ${{ secrets.INV_LOGO_URL }}
      INV_POPPINS_REG_URL:   ${{ secrets.INV_POPPINS_REG_URL }}
      INV_POPPINS_BOLD_URL:  ${{ secrets.INV_POPPINS_BOLD_URL }}
      INV_OAI_API_KEY:       ${{ secrets.INV_OAI_API_KEY }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests reportlab pillow pytz

      # 1) PDF erzeugen
      - name: Generate PDF
        run: python daily_report.py

      # 2) JÃ¼ngstes PDF suchen und in public/ kopieren
      - name: Copy PDF into pages folder
        run: |
          set -e
          mkdir -p public/reports
          FILE=$(find /tmp -maxdepth 1 -type f -name 'Daily_Investment_Report_*.pdf' \
                 -printf '%T@ %p\n' | sort -nr | head -n1 | cut -d' ' -f2-)
          if [ -z "$FILE" ]; then
            echo "::error ::Kein Report-PDF gefunden"; exit 1
          fi
          cp "$FILE"  public/reports/
          cp "$FILE"  public/Daily_Investment_Report_latest.pdf

      # 3) Archiv auf 30 Dateien kÃ¼rzen
      - name: Keep only 30 newest PDFs
        run: |
          cd public/reports
          ls -1t Daily_Investment_Report_*.pdf | tail -n +31 | xargs -r rm -f

      # 4) Deployment nach gh-pages
      - name: Deploy ðŸš€
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token:   ${{ secrets.GITHUB_TOKEN }}
          publish_dir:    ./public
          publish_branch: gh-pages
          keep_files:     true
