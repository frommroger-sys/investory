      - name: Parse responses (accept 200 or 201 if JSON has source_url)
        id: parse
        env:
          B1: ${{ steps.up1.outputs.body }}
          C1: ${{ steps.up1.outputs.code }}
          B2: ${{ steps.up2.outputs.body }}
          C2: ${{ steps.up2.outputs.code }}
        run: |
          set -euo pipefail
          choose_body=""
          # bevorzugt primary, sonst alt
          if [ "${C1:-0}" -ge 200 ] && [ "${C1:-0}" -lt 400 ]; then
            choose_body="$B1"
          elif [ "${C2:-0}" -ge 200 ] && [ "${C2:-0}" -lt 400 ]; then
            choose_body="$B2"
          else
            choose_body="$B1"
          fi
          echo "chosen=$choose_body" >> $GITHUB_OUTPUT
          echo "Chosen body: $choose_body"
          python - "$choose_body" <<'PY'
          import json,sys
          p=sys.argv[1]
          raw=open(p,'rb').read()
          try:
              data=json.loads(raw.decode('utf-8','replace'))
          except Exception as e:
              print("JSON parse error:", e)
              print("RAW(head):", raw[:300])
              sys.exit(3)
          if isinstance(data, list) and data:
              data=data[0]
          src = data.get("source_url") or (data.get("guid") or {}).get("rendered")
          mid = data.get("id")
          print("ATTACHMENT_ID:", mid)
          print("SOURCE_URL:", src)
          # Erfolg, wenn gÃ¼ltige PDF-URL vorhanden, egal ob 200 oder 201
          if not src or not str(src).lower().endswith(".pdf"):
              sys.exit(4)
          PY
